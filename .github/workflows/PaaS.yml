name: Platform as a Service (PaaS)
run-name: ${{ github.actor }} triggered a CI job 🚀
on: [push, workflow_call]
jobs:
  PaaS:
    runs-on: ubuntu-latest
    steps:
      - name: PaaS-Start-Up-Information
        run: | 
          echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
          echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "🍏 This job's status is ${{ job.status }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Get repository information
        run: |
          echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
          echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
          echo "🖥️ The workflow is now ready to test your code on the runner."
          echo "List files in the repository"
          ls -la ${{ github.workspace }}
      - name: Lint Helm
        run: |
          if [ -f "helm/Chart.yaml" ]; then
            echo "Helm chart exists"
            helm lint helm
          else
            echo "File does not exist"
            exit 1;
          fi
      - name: Docker Build
        run: |
          docker_tag=0.0.1.RELEASE
          docker_repo=d1v3/flask_website

          if [ -f "Dockerfile" ]; then
            echo "Dockerfile exists"
            docker buildx build --platform linux/amd64 --iidfile docker_image_id.txt -t ${docker_repo}:${docker_tag} .
              # If you get a 503 error check --> https://www.dockerstatus.com
          else
            echo "File does not exist"
            # exit 1;
          fi
      - name: Docker push
        if: ${{ success() }}
        run: | 
          docker_image_id="${${$(<docker_image_id.txt)#sha256:}:0:12}"
          # Check for the existence of a specific Docker image ID
          if docker images -q | grep -wq $docker_image_id; then
            echo "The Docker image ID exists locally"
            docker push docker.io/${docker_repo}:${docker_tag}
          else
            echo "The Docker image ID does not exist locally"
            exit 1;
          fi
        
      - run: echo "🍏 This job's status is ${{ job.status }}."